*********************************************************************
*********************************************************************
****************не много основных команд*******************
*********************************************************************
*********************************************************************

создать папку test в текушей директории
	mkdir test
	************
удалить папку в текушей директории(для папок указать опцию -r(рекурсивно) без этой опции не удаляет папки)
	rm -r test
	************
создать пустой файл с именем test в текушей директории
	touch test
	************
удалить файл с именем test из текушей директории
	rm test
	*********

узнать размер папки\файла по адресу /etc/sysconfig
	du -hsx /etc/sysconfig/
	****************************
копировать папку test (-r рекурсивно) из текушей директории в директорию /home/stiks17/
	cp -r test /home/stiks17/ 
	*******************************

поиск "-name" по имени файла с названием 'messages'
	find / -name messages
	****************************
команду TAIL, она позволяет выводить заданное количество строк с конца файла, а также выводить новые строки в интерактивном режиме
просмотров логов из файла 'messages'(по умолчанию выводит последние 10)
	 tail /var/log/messages
	*****************************
то же что и выше но вывести 20 последних событий(меняя ключ можно вывести сколько угодно)
	tail -20 /var/log/messages
	*********************************
Команда HEAD выводит начальные строки (по умолчанию — 10)
просмотров логов из файла 'messages'(по умолчанию выводит первые 10)
	head /var/log/messages
	*****************************
то же что и выше но вывести 20 первых событий(меняя ключ можно вывести сколько угодно)
	head -20 /var/log/messages
	*********************************
поиск текста в файлах linux команда GREP(пишется маленкими буквами)
выведем логи службы  kdump.service
ниже мы попросили вывести строки содержашие "kdump.service" из файла с адресом /var/log/messages
	grep kdump.service /var/log/messages
	************************************************
РЕКУРСИВНОЕ ИСПОЛЬЗОВАНИЕ GREP
ниже мы попросили найти текст "user" во всей папке etc рекурсивно
	grep -r user /etc
	******************** 
совмешение команд знак '|'
в примере ниже мы попросили найти последних 1000 строк в файле 'messages' и потом отобрали те которые содержут 'kdump.service' Это очень обширная тема!
	tail -1000 messages | grep kdump.service
	***************************************************
что бы проверить как разбиты жесткие диски и сколько на них использованного и свободного места воспользуемся командой
	df -h
	******

что бы просмотреть состояние оперативной памяти
	top
	****
что бы посмотреть запушенные процессы вводим
	ps aux
	********
что бы в запущенных процессах найти какой то конкретный(например "cron") введем конструкцию
	ps aux | grep cron
	*********************
что бы остановить('убить') процесс сначала узнаем его номер pid (это видно в команде ps aux) (например 654) и выполним команду
	kill 654
	*********






*********************************************************************
*********************************************************************
***********************сетевые настройки**********************
*********************************************************************
*********************************************************************
здесь лежат сетевые настройки сетевых интерфейсов (аналог подключения по локальной сети так как работаем в вирт машине)*
	/etc/sysconfig/network-scripts
	**************************************

ниже примерное содержание файла fcfg-enp0s3 который содержит сетевые настройки
BOOTPROTO=static
IPADDR=192.168.42.139
NETMASK=255.255.255.0
DNS1=8.8.8.8
DNS2=8.8.4.4
GATEWAY=192.168.42.129
NAME=enp0s3
UUID=60c88b91-5af8-4c0a-8b80-4b757cee0202
DEVICE=enp0s3
ONBOOT=yes

перезагрузить сетевые службы без reboot
	service network restart
	****************************

Текущие адреса dns сервера в CentOS можно посмотреть в двух местах:
В файле с настройками сетевой карты ifcfg-eth0, которым мы ранее неоднократно редактировали.
В файле /etc/resolv.conf
Зачем они сейчас в двух местах, я не знаю, но раньше настройки dns сервера в каких-то дистрибутивах, не помню уже точно каких, указывались только в resolv.conf, но в какой-то момент это изменилось. И все сетевые настройки стали храниться в одном файле вместе с адресом, шлюзом, маской и прочим. Если сейчас отредактировать файл resolv.conf и внести туда какие-то dns сервера, то после перезагрузки они будут заменены на значения из файла ifcfg-eth0(название примерно такое. у меня ifcfg-enp0s3).
Так что для того, чтобы установить параметры dns сервера, нужно отредактировать файл сетевых настроек ifcfg-eth0, добавив туда столько серверов, сколько требуется. Например так:
	 /etc/resolv.conf
	*********************
	/etc/sysconfig/network-scripts/ifcfg-eth0
	***************************************************




*********************************************************************
*********************************************************************
****************заведение пользователей********************
*********************************************************************
*********************************************************************
для обеспечения первоночальной безопасности системы нужно решить две задачи
1.Создать нового пользователя
2.Закрыть удаленный доступ пользователю root 

создать нового пользователя  c именем netskills
	useradd netskills
	********************

для того что бы пользователь netskills мог конфигурировать систему его нужно добавить в список пользователей которым разрешено выполнять операции от имени администратора. Этот список содержится в файле 
	/etc/sudoers
	****************

для его редактированиясушествует специальная команда
	visudo -f /etc/sudoers
	*************************** 

можно и другим редактором. Находим строку
	root	ALL=(ALL)	ALL
	***************************************

и делаем по ее подобию
	netskills	ALL=(ALL)	ALL
	***************************************
вся эта фигня с файлом sudoers не работает!!!
-----------------------------------------------------------

сработала команда добавления пользователя в группу whell(эта группа и дает право на конфигурирование от имени root через команду sudo)
	usermod -aG wheel netskills
	***********************************
после этой команды пользователь получает права root но  в  файле sudoers ни чего не меняется
все группы можно посмотреть в файле
	/etc/group
	**************
там (в данном примере) есть строчка 
	whell:x:10:netskills
	************************
что бы удалить пользователя netskills из группы whell введем
	sudo gpasswd -d netskills wheel
	****************************************

после того как netskills получил возможность конфигурить систему закроем удаленный доступ пользователю root. Для этого сначала перезайдем от netskills
	su netskills
	**************
откроем файл для редактирования(в данном примере пользуюсь редактором mcedit).И обязательно воспользуемся данными нам правами суперпользователя. Для этого сначала используем команду sudo
	sudo mcedit /etc/ssh/sshd_config
	******************************************
находим в нем строчку
	#PermitRootLogin  yes
	***************************
и делаем ее вот такой(раскоментировали и вместо yes написали -no)
	PermitRootLogin  no
	*************************
для вступления в силу изменений перечетаем(перезагрузим) конф. файл командой
	sudo service sshd reload
	******************************

теперь поменяем владельца и группу для папки (надо находиться там же где и папка backap)(-R рекурсивно для всего что внутри -тоже сработает)
	sudo -R chown netskills:netskills backap
	*************************************************

зададим права папке backap(путь абсолютный), -R(для всего вложенного (рекурсивно)): для владельца и группы чтение, запись, выполнение - разрешены для всех  остальных все запрещенно ((rwxrwx---)(770))
	 chmod -R 770 /home/stiks17/backap/
	***********************************************







*********************************************************************
*********************************************************************
**********************установка пакетов************************
*********************************************************************
*********************************************************************
YUM ( Yellowdog Updater Modified ) - это пакетный менеджер с открытым исходным кодом, разработанный в компании RedHat для работы с пакетами в формате RPM. С помощью него пользователи и системные администраторы могут устанавливать, удалять и обновлять пакеты в системах, основанных на RedHat.
Конфигурационный файл yum лежит по адрессу:
	/etc/yum.conf
	******************
Если, например, нужно прописать прокси и.т.п, то нам в этот файл.

Настройки репозиториев лежат в папке 
	/etc/yum.repos.d/
	**********************
если открыть файл /etc/yum.repos.d/CentOS-Base.repo то увидим четыре раздела:
	[base]
	[updates]
	[extras]
	[centosplus]
если в конце раздела видим строчку enabled=0 значит этот раздел выключен.
Зайдем еше в файл CentOS-Media.repo здесь источник диск. Если нам установка с диска не нужна (в большинстве серверов), то он должен быть выключен.Там всего один раздел :
	[c7-media]
и он должен быть выключен
	enabled=0 

Для обновления системы введем от имени админа(sudo)
	yum update
и подтверждаем (y) чтобы согласиться с обновлением. В зависимости от обновления нужно подтверждать один или более раз. В конце напишет Complete!





	












